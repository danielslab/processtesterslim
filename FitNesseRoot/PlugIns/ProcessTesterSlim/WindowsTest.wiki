!define TEST_SYSTEM (SLIM)

| import |
| six42.fitnesse.processtesterslim |

|scenario |	show collapsed |	content|
|show| 	@content|


!4 required under Linux only once to ensure all processes get terminated when slim terminates
| script | process tester slim |
|attachShutDownHook|

!4 run a short command and wait that it terminates but max 1 second
| script | process tester slim |
| $dir= | execute; | cmd.exe /c dir !-|-! sort | 1|
| start | $dir |
| check | exit value | 0 |
| check not | std err | =~/./ |
| show | std out |
| check | std out | =~/Fit/ |

!4 run a long command and wait that it terminates but max 1 second
!5 the command will get killed
| script | process tester slim |
| $dir= | execute; | cmd.exe /c dir /s | 1|
| start | $dir |
| check | exit value | KILL |
| $killStr= | exit value  |
| check not | std err | =~/./ |
| show collapsed| std out |
|check not | std out | =~/$killStr/|

!4 start multiple programs and let them run in the background 
| script | process tester slim |
| $notepad= | do spawn; | notepad.exe |
| $notepad2= | do spawn; | notepad.exe |
| $p2= | do spawn; | cmd.exe /c dir /s |
| $p3= | do spawn; | cmd.exe /c dir /s |
| $tasklist= | do spawn; | cmd.exe /c tasklist !-|-! sort|

| script | $notepad |
| terminate |
| check | exit value | KILL |

!4 Check that the kill command works and output can be read
| script | $p2 |
| $first= | std out |
|# Wait only for 1 mili seconds|
| waitFor | 0.001| seconds|
| check | exit value | RUNNING |
| terminate |
| check | exit value | KILL |
| check not | std err | =~/./ |
| show  collapsed| std out |
|# check more output has been added since the first time|
| check not | std out | $first |
| $terminatedOutput= | std out |

!4 Check that "wait for termination" works and output can be read
| script | $p3 |
| check | exit value | RUNNING|
| wait For Termination |
| check | exit value | 0 |
| check not | std err | =~/./ |
| show  collapsed| std out |
|# the output from a killed process should not be the sames as from a terminated one|
| check not | std out | $terminatedOutput |

| script | $tasklist |
| terminate |
| check | exit value | 0 |
| check not | std err | =~/./ |
| show | std out |


!4 Only required under Windows
!4 to terminate all still running processes
| script | process tester slim |
|show| terminateAllProcesses|
